version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspaces:cached
      - ../:/app
      - ./post-create.sh:/app/.devcontainer/post-create.sh:ro
      - ../Procfile.dev:/Procfile.dev:ro
      - /etc/letsencrypt/live/trustyantler.truanon.com/fullchain.pem:/etc/ssl/certs/fullchain.pem
      - /etc/letsencrypt/live/trustyantler.truanon.com/privkey.pem:/etc/ssl/private/privkey.pem
    working_dir: /app

    environment:
      RAILS_ENV: development
      NODE_ENV: development
      BIND: 0.0.0.0
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      DB_HOST: db
      DB_USER: postgres
      DB_PASS: postgres
      DB_PORT: '5432'
      ES_ENABLED: 'true'
      ES_HOST: es
      ES_PORT: '9200'
      LIBRE_TRANSLATE_ENDPOINT: http://libretranslate:5000
      SMTP_SERVER: smtp.socketlabs.com
      SMTP_PORT: '587'
      SMTP_LOGIN: server14241
      SMTP_PASSWORD: q6W4Leo8QBm9d
      SMTP_FROM_ADDRESS: noreply@trustyantler.truanon.com
      SMTP_DELIVERY_METHOD: smtp

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    ports:
      - "80:3000" # for port 80
      - "443:3001"  # This maps HTTPS traffic from the host's port 443 to the container's port 3000
      - "3001:3001"  # Add this line to expose port 3001
      - '3000:3000'
      - '3035:3035'
      - '4000:4000'
    networks:
      - external_network
      - internal_network

  db:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - internal_network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - internal_network

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    restart: unless-stopped
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      cluster.name: es-mastodon
      discovery.type: single-node
      bootstrap.memory_lock: 'true'
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - internal_network
    ulimits:
      memlock:
        soft: -1
        hard: -1

  libretranslate:
    image: libretranslate/libretranslate:v1.5.2
    restart: unless-stopped
    volumes:
      - lt-data:/home/libretranslate/.local
    networks:
      - external_network
      - internal_network

volumes:
  postgres-data:
  redis-data:
  es-data:
  lt-data:

networks:
  external_network:
  internal_network:
    internal: true
